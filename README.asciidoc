lua-lvm2app - Lua bindings for liblvm2app
=========================================
:author: Christian Wiese
:email:  chris@opensde.org


[WARNING]
The Lua bindings for `liblvm2app` provided here are in a very early stage of
development, thus do not use them in a production environment!

Build Dependencies
------------------

- cmake
- pkgconfig
- liblvm2app shipped with http://sourceware.org/lvm2/[LVM2]

[WARNING]
If your distribution does not ship `liblvm2app` and its development files, you
have to compile `lvm2` from the sources by yourself which might be very
dangerous for your host environment if you already rely on lvm2.

To enable the build and installation of `liblvm2app` you need to configure the
sources with `--enable-applib`.

Besides that the detection of `liblvm2app` depends on `pkg-config` so
lvm2 sources also need to be configured with `--enable-pkgconfig` to
get `.pc` files installed.

.Example for configuring lvm2 sources
-----------------------------------------------------------------------------
./configure --enable-applib --enable-pkgconfig
-----------------------------------------------------------------------------

Installing
----------

=== Install from git

Clone the git repository
-----------------------------------------------------------------------------
git clone git://github.com/morfoh/lua-lvm2app.git
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
cd lua-lvm2app
-----------------------------------------------------------------------------

Prepare a dedicated build directory
-----------------------------------------------------------------------------
mkdir build
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
cd build
-----------------------------------------------------------------------------

Generate Makefiles and related build infrastructure
-----------------------------------------------------------------------------
cmake ../
-----------------------------------------------------------------------------

Alternatively you can specify the path where to install the module
-----------------------------------------------------------------------------
cmake ../ -DINSTALL_CMOD=/usr/local/lib/lua/5.1
-----------------------------------------------------------------------------

Compile the module
-----------------------------------------------------------------------------
make
-----------------------------------------------------------------------------

Install the module
-----------------------------------------------------------------------------
sudo make install
-----------------------------------------------------------------------------


=== Install using lua-rocks

-----------------------------------------------------------------------------
curl -O "https://github.com/morfoh/lua-lvm2app/raw/master/lua-lvm2app-scm-0.rockspec"
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
luarocks install lua-lvm2app-scm-0.rockspec
-----------------------------------------------------------------------------


Development
-----------

=== Re-generating the bindings

By default CMake will use the pre-generated bindings that are include in the
project.

To be able to re-generate the bindings, you will need to install
https://github.com/Neopallium/LuaNativeObjects[LuaNativeObjects] and set the
CMake variable `USE_PRE_GENERATED_BINDINGS` to `FALSE`.

-----------------------------------------------------------------------------
cmake ../ -DUSE_PRE_GENERATED_BINDINGS=FALSE
-----------------------------------------------------------------------------

Mandantory for re-generating Lua bindings from `*.nobj.lua` files:

* https://github.com/Neopallium/LuaNativeObjects[LuaNativeObjects], this is the
  bindings generator used to convert the `*.nobj.lua` files into a native Lua
  module.

Optional for re-generating documentation

* https://github.com/keplerproject/luadoc[luadoc]

To not re-generate documentation by luadocs when re-generating the bindings
you have to to set the CMake variable `GENERATE_LUADOCS` to `FALSE`.
-----------------------------------------------------------------------------
cmake ../ -DUSE_PRE_GENERATED_BINDINGS=FALSE -DGENERATE_LUADOCS=FALSE
-----------------------------------------------------------------------------

